/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    lists: List;
    'list-items': ListItem;
    reviews: Review;
    'review-replies': ReviewReply;
    likes: Like;
    'user-items': UserItem;
    'user-episodes': UserEpisode;
    'social-links': SocialLink;
    imports: Import;
    activities: Activity;
    videos: Video;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    lists: ListsSelect<false> | ListsSelect<true>;
    'list-items': ListItemsSelect<false> | ListItemsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'review-replies': ReviewRepliesSelect<false> | ReviewRepliesSelect<true>;
    likes: LikesSelect<false> | LikesSelect<true>;
    'user-items': UserItemsSelect<false> | UserItemsSelect<true>;
    'user-episodes': UserEpisodesSelect<false> | UserEpisodesSelect<true>;
    'social-links': SocialLinksSelect<false> | SocialLinksSelect<true>;
    imports: ImportsSelect<false> | ImportsSelect<true>;
    activities: ActivitiesSelect<false> | ActivitiesSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword:
    | {
        email: string;
      }
    | {
        username: string;
      };
  login:
    | {
        email: string;
        password: string;
      }
    | {
        password: string;
        username: string;
      };
  registerFirstUser: {
    password: string;
    username: string;
    email?: string;
  };
  unlock:
    | {
        email: string;
      }
    | {
        username: string;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email?: string | null;
  username: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lists".
 */
export interface List {
  id: number;
  title: string;
  description?: string | null;
  visibility: 'PUBLIC' | 'NETWORK' | 'PRIVATE';
  bannerUrl?: (number | null) | Media;
  user: number | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "list-items".
 */
export interface ListItem {
  id: number;
  list: number | List;
  tmdbId: number;
  mediaType: 'TV_SHOW' | 'MOVIE';
  position?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  user: number | User;
  tmdbId: number;
  mediaType: 'TV_SHOW' | 'MOVIE';
  review: string;
  rating: number;
  hasSpoilers?: boolean | null;
  language?: ('en-US' | 'es-ES') | null;
  seasonNumber?: number | null;
  episodeNumber?: number | null;
  likeCount?: number | null;
  replyCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "review-replies".
 */
export interface ReviewReply {
  id: number;
  review: number | Review;
  user: number | User;
  reply: string;
  likeCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "likes".
 */
export interface Like {
  id: number;
  user: number | User;
  entityId: string;
  entityType: 'REVIEW' | 'REPLY' | 'LIST';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-items".
 */
export interface UserItem {
  id: number;
  user: number | User;
  tmdbId: number;
  mediaType: 'TV_SHOW' | 'MOVIE';
  status: 'WATCHLIST' | 'WATCHED' | 'WATCHING' | 'DROPPED';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-episodes".
 */
export interface UserEpisode {
  id: number;
  user: number | User;
  tmdbId: number;
  seasonNumber: number;
  episodeNumber: number;
  runtime?: number | null;
  watchedAt: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-links".
 */
export interface SocialLink {
  id: number;
  user: number | User;
  platform: 'INSTAGRAM' | 'TIKTOK' | 'YOUTUBE' | 'X';
  url: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imports".
 */
export interface Import {
  id: number;
  user: number | User;
  provider: 'MY_ANIME_LIST' | 'LETTERBOXD';
  itemsCount?: number | null;
  importStatus: 'COMPLETED' | 'FAILED' | 'PARTIAL' | 'NOT_STARTED';
  series?:
    | {
        name: string;
        tmdbId?: number | null;
        startDate?: string | null;
        endDate?: string | null;
        userItemStatus: 'WATCHLIST' | 'WATCHED' | 'WATCHING' | 'DROPPED';
        watchedEpisodes?: number | null;
        seriesEpisodes?: number | null;
        importStatus: 'COMPLETED' | 'FAILED' | 'NOT_STARTED';
        id?: string | null;
      }[]
    | null;
  movies?:
    | {
        name: string;
        tmdbId?: number | null;
        endDate?: string | null;
        userItemStatus: 'WATCHLIST' | 'WATCHED' | 'WATCHING' | 'DROPPED';
        importStatus: 'COMPLETED' | 'FAILED' | 'NOT_STARTED';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities".
 */
export interface Activity {
  id: number;
  user: number | User;
  activityType:
    | 'ADD_ITEM'
    | 'DELETE_ITEM'
    | 'FOLLOW_USER'
    | 'UNFOLLOW_USER'
    | 'CREATE_LIST'
    | 'LIKE_LIST'
    | 'LIKE_REVIEW'
    | 'CREATE_REVIEW'
    | 'LIKE_REPLY'
    | 'CREATE_REPLY'
    | 'WATCH_EPISODE'
    | 'CHANGE_STATUS'
    | 'CREATE_ACCOUNT';
  entityType?: ('LIST' | 'REVIEW' | 'REPLY') | null;
  entityId: string;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  additionalInfo:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: number;
  url: string;
  platform?: ('YouTube' | 'Vimeo' | 'Facebook') | null;
  language?: string | null;
  type?: ('recap' | 'review' | 'trailer') | null;
  tmdbId: number;
  mediaType: 'MOVIE' | 'TV_SHOW';
  seasonNumber?: number | null;
  episodeNumber?: number | null;
  title?: string | null;
  thumbnailUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'lists';
        value: number | List;
      } | null)
    | ({
        relationTo: 'list-items';
        value: number | ListItem;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'review-replies';
        value: number | ReviewReply;
      } | null)
    | ({
        relationTo: 'likes';
        value: number | Like;
      } | null)
    | ({
        relationTo: 'user-items';
        value: number | UserItem;
      } | null)
    | ({
        relationTo: 'user-episodes';
        value: number | UserEpisode;
      } | null)
    | ({
        relationTo: 'social-links';
        value: number | SocialLink;
      } | null)
    | ({
        relationTo: 'imports';
        value: number | Import;
      } | null)
    | ({
        relationTo: 'activities';
        value: number | Activity;
      } | null)
    | ({
        relationTo: 'videos';
        value: number | Video;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  username?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lists_select".
 */
export interface ListsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  visibility?: T;
  bannerUrl?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "list-items_select".
 */
export interface ListItemsSelect<T extends boolean = true> {
  list?: T;
  tmdbId?: T;
  mediaType?: T;
  position?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  user?: T;
  tmdbId?: T;
  mediaType?: T;
  review?: T;
  rating?: T;
  hasSpoilers?: T;
  language?: T;
  seasonNumber?: T;
  episodeNumber?: T;
  likeCount?: T;
  replyCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "review-replies_select".
 */
export interface ReviewRepliesSelect<T extends boolean = true> {
  review?: T;
  user?: T;
  reply?: T;
  likeCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "likes_select".
 */
export interface LikesSelect<T extends boolean = true> {
  user?: T;
  entityId?: T;
  entityType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-items_select".
 */
export interface UserItemsSelect<T extends boolean = true> {
  user?: T;
  tmdbId?: T;
  mediaType?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-episodes_select".
 */
export interface UserEpisodesSelect<T extends boolean = true> {
  user?: T;
  tmdbId?: T;
  seasonNumber?: T;
  episodeNumber?: T;
  runtime?: T;
  watchedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-links_select".
 */
export interface SocialLinksSelect<T extends boolean = true> {
  user?: T;
  platform?: T;
  url?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imports_select".
 */
export interface ImportsSelect<T extends boolean = true> {
  user?: T;
  provider?: T;
  itemsCount?: T;
  importStatus?: T;
  series?:
    | T
    | {
        name?: T;
        tmdbId?: T;
        startDate?: T;
        endDate?: T;
        userItemStatus?: T;
        watchedEpisodes?: T;
        seriesEpisodes?: T;
        importStatus?: T;
        id?: T;
      };
  movies?:
    | T
    | {
        name?: T;
        tmdbId?: T;
        endDate?: T;
        userItemStatus?: T;
        importStatus?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities_select".
 */
export interface ActivitiesSelect<T extends boolean = true> {
  user?: T;
  activityType?: T;
  entityType?: T;
  entityId?: T;
  metadata?: T;
  additionalInfo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  url?: T;
  platform?: T;
  language?: T;
  type?: T;
  tmdbId?: T;
  mediaType?: T;
  seasonNumber?: T;
  episodeNumber?: T;
  title?: T;
  thumbnailUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}